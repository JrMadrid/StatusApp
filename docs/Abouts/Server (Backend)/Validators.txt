# VALIDATORS

Este directorio contiene las validaciones de los datos.

Descripción:
- Valida que los datos sean como la base los espera.
- Cada validator debe entregar un mensaje en caso de encontrar una falla.

Notas:
- Se debe establecer la estructura tal cual como es en la tabla de la base de datos.

Estructura:

/* Esquema de validación para agregar un dispositivo */
const SchemaCrearDispositivo = Joi.object({

  // Campo 'nombre' del dispositivo
  nombre: Joi.string() // Debe ser una cadena de texto
    .max(75) // Longitud máxima: 75 caracteres
    .required() // Campo obligatorio
    .messages({ // Mensajes de error personalizados
      'string.empty': 'El nombre del dispositivo es obligatorio.',
      'string.max': 'El nombre del dispositivo no puede superar los 75 caracteres.'
    }),

  // Campo 'ip' del dispositivo
  ip: Joi.string() // Debe ser un string (como llega del input)
    .pattern(/^(000|001|((25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)))\.(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|1\d{2}|[1-9]?\d)$/) // Expresión regular para validar una dirección IPv4
    // .ip({ version: ['ipv4'], cidr: 'forbidden' }) // Debe ser una IP IPv4 válida, sin notación CIDR (/24, etc.)
    .required() // Campo obligatorio
    .messages({
      'string.empty': 'La IP es obligatoria.',
      // 'string.ip': 'La IP debe ser una dirección IPv4 válida.',
      'any.invalid': 'La IP no es válida.',
      'string.pattern.base': 'La IP debe ser válida o una IP especial que empiece con 000. o 001.',
    }),

  // Campo 'económico'
  economico: Joi.string() // Lo tratamos como string aunque sea numérico, porque llega como texto
    .pattern(/^\d{6}$/) // Debe coincidir con exactamente 6 dígitos numéricos
    .required() // Campo obligatorio
    .messages({
      'string.empty': 'El número económico es obligatorio.',
      'string.pattern.base': 'El número económico debe tener exactamente 6 dígitos.'
    }),

});